<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>