<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>